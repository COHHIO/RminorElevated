memory profiling: sample.interval=20000
:4426107:25665381:316496208:433:".substitute_formats" "<Anonymous>" "mapply" ".build_formats" "guess_formats" "unique" ".best_formats" ".local_parse" "lubridate::parse_date_time" ".f" "map2" "purrr::imap" "check_dates" "between_df" "entered_between" ".Call" "mask$eval_all_filter" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "filter_rows" "filter.data.frame" "filter" "function_list[[i]]" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "renderPlot" "..stacktraceon.." "func" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "domain$wrapSync" "promises::with_promise_domain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "drawPlot" "do.call" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "<reactive:plotObj>" "..stacktraceon.." ".func" "withVisible" "withCallingHandlers" "contextFunc" "env$runWith" "force" "domain$wrapSync" "promises::with_promise_domain" "withReactiveDomain" "domain$wrapSync" "promises::with_promise_domain" "ctx$run" "self$.updateValue" "..stacktraceoff.." "drawReactive" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "origRenderFunc" "output$DeskTimePlotDetail" "..stacktraceon.." "orig" "func" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "withCallingHandlers" "shinyCallingHandlers" "force" "domain$wrapSync" "promises::with_promise_domain" "private$withCurrentOutput" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "<observer:output$DeskTimePlotDetail>" "contextFunc" "env$runWith" "force" "domain$wrapSync" "promises::with_promise_domain" "withReactiveDomain" "domain$wrapSync" "promises::with_promise_domain" "ctx$run" "run" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "withCallingHandlers" "shinyCallingHandlers" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "flushCallback" "FUN" "lapply" "ctx$executeFlushCallbacks" "<Anonymous>" "flushReact" "serviceApp" "..stacktracefloor.." "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "..stacktraceoff.." "runApp" 
:4430605:25905435:317448768:735:"%in%" ".Call" "mask$eval_all_filter" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "filter_rows" "filter.data.frame" "filter" "function_list[[i]]" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "renderPlot" "..stacktraceon.." "func" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "domain$wrapSync" "promises::with_promise_domain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "drawPlot" "do.call" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "<reactive:plotObj>" "..stacktraceon.." ".func" "withVisible" "withCallingHandlers" "contextFunc" "env$runWith" "force" "domain$wrapSync" "promises::with_promise_domain" "withReactiveDomain" "domain$wrapSync" "promises::with_promise_domain" "ctx$run" "self$.updateValue" "..stacktraceoff.." "drawReactive" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "origRenderFunc" "output$DeskTimePlotDetail" "..stacktraceon.." "orig" "func" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "withCallingHandlers" "shinyCallingHandlers" "force" "domain$wrapSync" "promises::with_promise_domain" "private$withCurrentOutput" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "<observer:output$DeskTimePlotDetail>" "contextFunc" "env$runWith" "force" "domain$wrapSync" "promises::with_promise_domain" "withReactiveDomain" "domain$wrapSync" "promises::with_promise_domain" "ctx$run" "run" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "withCallingHandlers" "shinyCallingHandlers" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "flushCallback" "FUN" "lapply" "ctx$executeFlushCallbacks" "<Anonymous>" "flushReact" "serviceApp" "..stacktracefloor.." "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "..stacktraceoff.." "runApp" 
:4437778:26011299:319717776:1588:"is_symbol" "FUN" "lapply" "map" "endots" "enquos" "mutate_cols" "mutate.data.frame" "mutate" "function_list[[i]]" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "renderPlot" "..stacktraceon.." "func" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "domain$wrapSync" "promises::with_promise_domain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "drawPlot" "do.call" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "<reactive:plotObj>" "..stacktraceon.." ".func" "withVisible" "withCallingHandlers" "contextFunc" "env$runWith" "force" "domain$wrapSync" "promises::with_promise_domain" "withReactiveDomain" "domain$wrapSync" "promises::with_promise_domain" "ctx$run" "self$.updateValue" "..stacktraceoff.." "drawReactive" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "origRenderFunc" "output$DeskTimePlotDetail" "..stacktraceon.." "orig" "func" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "withCallingHandlers" "shinyCallingHandlers" "force" "domain$wrapSync" "promises::with_promise_domain" "private$withCurrentOutput" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "<observer:output$DeskTimePlotDetail>" "contextFunc" "env$runWith" "force" "domain$wrapSync" "promises::with_promise_domain" "withReactiveDomain" "domain$wrapSync" "promises::with_promise_domain" "ctx$run" "run" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "withCallingHandlers" "shinyCallingHandlers" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "flushCallback" "FUN" "lapply" "ctx$executeFlushCallbacks" "<Anonymous>" "flushReact" "serviceApp" "..stacktracefloor.." "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "..stacktraceoff.." "runApp" 
:4447137:26017900:322582456:2135:"vec_set_attributes" "new_vctr" "new_list_of" "group_data.data.frame" "NextMethod" "as_tibble" "group_data.tbl_df" "group_data" "setdiff" "group_vars.data.frame" "group_vars" "structure" "new_sel_vars" "tbl_vars" "as.vector" "base::setdiff" "setdiff.default" "setdiff" "group_by_prepare" "group_by.data.frame" "group_by" "function_list[[i]]" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "renderPlot" "..stacktraceon.." "func" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "domain$wrapSync" "promises::with_promise_domain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "drawPlot" "do.call" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "<reactive:plotObj>" "..stacktraceon.." ".func" "withVisible" "withCallingHandlers" "contextFunc" "env$runWith" "force" "domain$wrapSync" "promises::with_promise_domain" "withReactiveDomain" "domain$wrapSync" "promises::with_promise_domain" "ctx$run" "self$.updateValue" "..stacktraceoff.." "drawReactive" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "origRenderFunc" "output$DeskTimePlotDetail" "..stacktraceon.." "orig" "func" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "withCallingHandlers" "shinyCallingHandlers" "force" "domain$wrapSync" "promises::with_promise_domain" "private$withCurrentOutput" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "<observer:output$DeskTimePlotDetail>" "contextFunc" "env$runWith" "force" "domain$wrapSync" "promises::with_promise_domain" "withReactiveDomain" "domain$wrapSync" "promises::with_promise_domain" "ctx$run" "run" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "withCallingHandlers" "shinyCallingHandlers" "force" "withVisible" "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do" "hybrid_chain" "flushCallback" "FUN" "lapply" "ctx$executeFlushCallbacks" "<Anonymous>" "flushReact" "serviceApp" "..stacktracefloor.." "withCallingHandlers" "domain$wrapSync" "promises::with_promise_domain" "captureStackTraces" "..stacktraceoff.." "runApp" 
